{"ast":null,"code":"var _jsxFileName = \"/Users/haileyhansard/Dropbox/LAMBDA SCHOOL/LambdaWork/CS/Week4BuildWeek/conways-game-of-life/game-of-life/src/Components/GameControls.js\";\nimport React from 'react';\n\nconst GameControls = props => {\n  const {\n    generateEmptyGrid,\n    runSimulation,\n    clearGrid,\n    setGrid,\n    running,\n    setRunning,\n    runningRef,\n    numRows,\n    setNumRows,\n    generation,\n    setGeneration,\n    speed,\n    setSpeed,\n    nextGeneration,\n    prevGeneration\n  } = props;\n\n  const increaseSize = () => {\n    if (numRows < 40) setNumRows(numRows + 5);\n    setGeneration(0);\n  };\n\n  const decreaseSize = () => {\n    if (numRows > 20) setNumRows(numRows - 5);\n    setGeneration(0);\n  };\n\n  const slower = () => {\n    if (speed < 2000) setSpeed(speed + 500);\n  };\n\n  const faster = () => {\n    if (speed > 250) setSpeed(speed - 500);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"first-set-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setRunning(!running);\n\n      if (!running) {\n        runningRef.current = true;\n        runSimulation();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, running ? 'Stop' : 'Start!'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => clearGrid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Clear Grid\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      const rows = [];\n\n      for (let i = 0; i < numRows; i++) {\n        const row = [];\n\n        for (let k = 0; k < numRows; k++) {\n          row.push(Math.random() > 0.7 ? 1 : 0);\n        } //70% chance of getting a 0\n\n\n        rows.push(row);\n      }\n\n      setGrid(rows);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Randomize!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: slower,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Slower -\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: faster,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Faster +\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: running,\n    onClick: decreaseSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Decrease Grid Size -\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: running,\n    onClick: increaseSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Increase Grid Size +\")));\n};\n\nexport default GameControls; //TODO:\n// -  it seems like the game is not playing on the increased grid size, it adds random cells but they do not play.\n// x UPDATE: this is how its supposed to work. -- the generations keep running even after all cells have stopped moving. need to fix this.\n// - if time, add Pulsar, 5 cell line, or blinker preset configs to PresetConfigurations\n// - make sense of the speed display. right now its Speed: 100. 100 what? Make it gen/sec if possible\n// if time, add images for each preset to show an example","map":{"version":3,"sources":["/Users/haileyhansard/Dropbox/LAMBDA SCHOOL/LambdaWork/CS/Week4BuildWeek/conways-game-of-life/game-of-life/src/Components/GameControls.js"],"names":["React","GameControls","props","generateEmptyGrid","runSimulation","clearGrid","setGrid","running","setRunning","runningRef","numRows","setNumRows","generation","setGeneration","speed","setSpeed","nextGeneration","prevGeneration","increaseSize","decreaseSize","slower","faster","current","rows","i","row","k","push","Math","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAM;AACFC,IAAAA,iBADE;AAEFC,IAAAA,aAFE;AAGFC,IAAAA,SAHE;AAIFC,IAAAA,OAJE;AAKFC,IAAAA,OALE;AAMFC,IAAAA,UANE;AAOFC,IAAAA,UAPE;AAQFC,IAAAA,OARE;AASFC,IAAAA,UATE;AAUFC,IAAAA,UAVE;AAWFC,IAAAA,aAXE;AAYFC,IAAAA,KAZE;AAaFC,IAAAA,QAbE;AAcFC,IAAAA,cAdE;AAeFC,IAAAA;AAfE,MAgBFf,KAhBJ;;AAkBA,QAAMgB,YAAY,GAAG,MAAM;AACvB,QAAIR,OAAO,GAAG,EAAd,EAAkBC,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AAClBG,IAAAA,aAAa,CAAC,CAAD,CAAb;AACH,GAHD;;AAKA,QAAMM,YAAY,GAAG,MAAM;AACvB,QAAIT,OAAO,GAAG,EAAd,EAAkBC,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AAClBG,IAAAA,aAAa,CAAC,CAAD,CAAb;AACH,GAHD;;AAKA,QAAMO,MAAM,GAAG,MAAM;AACjB,QAAIN,KAAK,GAAG,IAAZ,EAAkBC,QAAQ,CAACD,KAAK,GAAG,GAAT,CAAR;AACrB,GAFD;;AAIA,QAAMO,MAAM,GAAG,MAAM;AACjB,QAAIP,KAAK,GAAG,GAAZ,EAAiBC,QAAQ,CAACD,KAAK,GAAG,GAAT,CAAR;AACpB,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,OAAO,EAAE,MAAM;AACXN,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;;AACA,UAAI,CAACA,OAAL,EAAc;AACdE,QAAAA,UAAU,CAACa,OAAX,GAAqB,IAArB;AACAlB,QAAAA,aAAa;AACZ;AACJ,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKG,OAAO,GAAG,MAAH,GAAY,QATxB,CADJ,eAaI;AAAQ,IAAA,OAAO,EAAE,MAAMF,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAeI;AACI,IAAA,OAAO,EAAE,MAAM;AACX,YAAMkB,IAAI,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,OAApB,EAA6Bc,CAAC,EAA9B,EAAkC;AAC9B,cAAMC,GAAG,GAAE,EAAX;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,OAApB,EAA6BgB,CAAC,EAA9B,EAAkC;AAC9BD,UAAAA,GAAG,CAACE,IAAJ,CAASC,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,CAAtB,GAA0B,CAAnC;AACH,SAJ6B,CAI5B;;;AACFN,QAAAA,IAAI,CAACI,IAAL,CAAUF,GAAV;AACH;;AACDnB,MAAAA,OAAO,CAACiB,IAAD,CAAP;AACH,KAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,CADJ,eAgCI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAQ,IAAA,OAAO,EAAEH,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,IAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,IAAA,QAAQ,EAAEd,OAAlB;AAA2B,IAAA,OAAO,EAAEY,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,eAMI;AAAQ,IAAA,QAAQ,EAAEZ,OAAlB;AAA2B,IAAA,OAAO,EAAEW,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,CAhCJ,CADJ;AA2CH,CAhFD;;AAkFA,eAAejB,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\n\nconst GameControls = props => {\n    const {\n        generateEmptyGrid,\n        runSimulation,\n        clearGrid,\n        setGrid,\n        running,\n        setRunning,\n        runningRef,\n        numRows,\n        setNumRows,\n        generation,\n        setGeneration,\n        speed,\n        setSpeed,\n        nextGeneration,\n        prevGeneration\n    } = props;\n\n    const increaseSize = () => {\n        if (numRows < 40) setNumRows(numRows + 5)\n        setGeneration(0)\n    }\n\n    const decreaseSize = () => {\n        if (numRows > 20) setNumRows(numRows - 5)\n        setGeneration(0)\n    }\n\n    const slower = () => {\n        if (speed < 2000) setSpeed(speed + 500)\n    }\n\n    const faster = () => {\n        if (speed > 250) setSpeed(speed - 500)\n    }\n\n    return (\n        <div className=\"game-controls\">\n            <div className=\"first-set-buttons\">\n                <button \n                    onClick={() => { \n                        setRunning(!running);\n                        if (!running) {\n                        runningRef.current = true;\n                        runSimulation()\n                        }\n                    }}\n                >\n                    {running ? 'Stop' : 'Start!' }\n                </button>\n                \n                <button onClick={() => clearGrid()}>Clear Grid</button>\n                \n                <button\n                    onClick={() => {\n                        const rows = [];\n                        for (let i = 0; i < numRows; i++) {\n                            const row =[]\n                            for (let k = 0; k < numRows; k++) {\n                                row.push(Math.random() > 0.7 ? 1 : 0)\n                            } //70% chance of getting a 0\n                            rows.push(row)\n                        }\n                        setGrid(rows);\n                    }}\n                > \n                    Randomize!\n                </button>\n            </div>\n            <div className=\"control-buttons\">\n                {/* <button disabled={running} onClick={prevGeneration}>Prev Gen -</button>\n                <button disabled={running} onClick={nextGeneration}>Next Gen + </button> */}\n                <button onClick={slower}>Slower -</button>\n                <button onClick={faster}>Faster +</button>\n                <button disabled={running} onClick={decreaseSize}>Decrease Grid Size -</button>\n                <button disabled={running} onClick={increaseSize}>Increase Grid Size +</button>\n            </div>\n        </div>\n    )\n}\n\nexport default GameControls;\n\n//TODO:\n// -  it seems like the game is not playing on the increased grid size, it adds random cells but they do not play.\n// x UPDATE: this is how its supposed to work. -- the generations keep running even after all cells have stopped moving. need to fix this.\n// - if time, add Pulsar, 5 cell line, or blinker preset configs to PresetConfigurations\n// - make sense of the speed display. right now its Speed: 100. 100 what? Make it gen/sec if possible\n// if time, add images for each preset to show an example"]},"metadata":{},"sourceType":"module"}