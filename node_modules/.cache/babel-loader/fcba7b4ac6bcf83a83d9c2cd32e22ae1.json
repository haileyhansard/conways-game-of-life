{"ast":null,"code":"var _jsxFileName = \"/Users/haileyhansard/Dropbox/LAMBDA SCHOOL/LambdaWork/CS/Week4BuildWeek/conways-game-of-life/game-of-life/src/Components/MainButtons.js\";\nimport React from 'react';\n\nconst MainButtons = props => {\n  const {\n    generateEmptyGrid,\n    runSimulation,\n    clearGrid,\n    setGrid,\n    running,\n    setRunning,\n    runningRef,\n    numRows,\n    setNumRows,\n    generation,\n    setGeneration,\n    speed,\n    setSpeed\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"first-set-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setRunning(!running);\n\n      if (!running) {\n        runningRef.current = true;\n        runSimulation();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, running ? 'Stop' : 'Start!'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => clearGrid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Clear Grid\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      const rows = [];\n\n      for (let i = 0; i < numRows; i++) {\n        const row = [];\n\n        for (let k = 0; k < numRows; k++) {\n          row.push(Math.random() > 0.7 ? 1 : 0);\n        } //70% chance of getting a 0\n\n\n        rows.push(row);\n      }\n\n      setGrid(rows);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Randomize!\")));\n};\n\nexport default MainButtons;","map":{"version":3,"sources":["/Users/haileyhansard/Dropbox/LAMBDA SCHOOL/LambdaWork/CS/Week4BuildWeek/conways-game-of-life/game-of-life/src/Components/MainButtons.js"],"names":["React","MainButtons","props","generateEmptyGrid","runSimulation","clearGrid","setGrid","running","setRunning","runningRef","numRows","setNumRows","generation","setGeneration","speed","setSpeed","current","rows","i","row","k","push","Math","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAM;AACFC,IAAAA,iBADE;AAEFC,IAAAA,aAFE;AAGFC,IAAAA,SAHE;AAIFC,IAAAA,OAJE;AAKFC,IAAAA,OALE;AAMFC,IAAAA,UANE;AAOFC,IAAAA,UAPE;AAQFC,IAAAA,OARE;AASFC,IAAAA,UATE;AAUFC,IAAAA,UAVE;AAWFC,IAAAA,aAXE;AAYFC,IAAAA,KAZE;AAaFC,IAAAA;AAbE,MAcFb,KAdJ;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,OAAO,EAAE,MAAM;AACXM,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;;AACA,UAAI,CAACA,OAAL,EAAc;AACdE,QAAAA,UAAU,CAACO,OAAX,GAAqB,IAArB;AACAZ,QAAAA,aAAa;AACZ;AACJ,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKG,OAAO,GAAG,MAAH,GAAY,QATxB,CADJ,eAaI;AAAQ,IAAA,OAAO,EAAE,MAAMF,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAeI;AACI,IAAA,OAAO,EAAE,MAAM;AACX,YAAMY,IAAI,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,OAApB,EAA6BQ,CAAC,EAA9B,EAAkC;AAC9B,cAAMC,GAAG,GAAE,EAAX;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,OAApB,EAA6BU,CAAC,EAA9B,EAAkC;AAC9BD,UAAAA,GAAG,CAACE,IAAJ,CAASC,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,CAAtB,GAA0B,CAAnC;AACH,SAJ6B,CAI5B;;;AACFN,QAAAA,IAAI,CAACI,IAAL,CAAUF,GAAV;AACH;;AACDb,MAAAA,OAAO,CAACW,IAAD,CAAP;AACH,KAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,CADJ,CADJ;AAmCH,CApDD;;AAsDA,eAAehB,WAAf","sourcesContent":["import React from 'react';\n\nconst MainButtons = props => {\n    const {\n        generateEmptyGrid,\n        runSimulation,\n        clearGrid,\n        setGrid,\n        running,\n        setRunning,\n        runningRef,\n        numRows,\n        setNumRows,\n        generation,\n        setGeneration,\n        speed,\n        setSpeed,\n    } = props;\n\n    return (\n        <div className=\"main-buttons\">\n            <div className=\"first-set-buttons\">\n                <button \n                    onClick={() => { \n                        setRunning(!running);\n                        if (!running) {\n                        runningRef.current = true;\n                        runSimulation()\n                        }\n                    }}\n                >\n                    {running ? 'Stop' : 'Start!' }\n                </button>\n                \n                <button onClick={() => clearGrid()}>Clear Grid</button>\n                \n                <button\n                    onClick={() => {\n                        const rows = [];\n                        for (let i = 0; i < numRows; i++) {\n                            const row =[]\n                            for (let k = 0; k < numRows; k++) {\n                                row.push(Math.random() > 0.7 ? 1 : 0)\n                            } //70% chance of getting a 0\n                            rows.push(row)\n                        }\n                        setGrid(rows);\n                    }}\n                > \n                    Randomize!\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default MainButtons;"]},"metadata":{},"sourceType":"module"}