{"ast":null,"code":"var _jsxFileName = \"/Users/haileyhansard/Dropbox/LAMBDA SCHOOL/LambdaWork/CS/Week4BuildWeek/conways-game-of-life/game-of-life/src/Components/GameControls.js\";\nimport React from 'react';\n\nconst GameControls = props => {\n  const {\n    runSimulation,\n    clearGrid,\n    running,\n    setRunning,\n    runningRef,\n    numRows,\n    setNumRows,\n    generation,\n    setGeneration,\n    speed,\n    setSpeed\n  } = props;\n\n  const increaseSize = () => {\n    if (numRows < 40) setNumRows;\n  };\n};\n\n({\n  setRunning,\n  running,\n  runningRef,\n  runSimulation,\n  setGrid,\n  generateEmptyGrid,\n  numRows\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setRunning(!running);\n\n      if (!running) {\n        runningRef.current = true;\n        runSimulation();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, running ? 'Stop' : 'Start'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      const rows = [];\n\n      for (let i = 0; i < numRows; i++) {\n        rows.push(Array.from(Array(numRows), () => Math.random() > 0.7 ? 1 : 0));\n      }\n\n      setGrid(rows);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Randomize!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setGrid(generateEmptyGrid());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Clear Grid\"));\n};\n\nexport default GameControls;","map":{"version":3,"sources":["/Users/haileyhansard/Dropbox/LAMBDA SCHOOL/LambdaWork/CS/Week4BuildWeek/conways-game-of-life/game-of-life/src/Components/GameControls.js"],"names":["React","GameControls","props","runSimulation","clearGrid","running","setRunning","runningRef","numRows","setNumRows","generation","setGeneration","speed","setSpeed","increaseSize","setGrid","generateEmptyGrid","current","rows","i","push","Array","from","Math","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAM;AACFC,IAAAA,aADE;AAEFC,IAAAA,SAFE;AAGFC,IAAAA,OAHE;AAIFC,IAAAA,UAJE;AAKFC,IAAAA,UALE;AAMFC,IAAAA,OANE;AAOFC,IAAAA,UAPE;AAQFC,IAAAA,UARE;AASFC,IAAAA,aATE;AAUFC,IAAAA,KAVE;AAWFC,IAAAA;AAXE,MAYFX,KAZJ;;AAcA,QAAMY,YAAY,GAAG,MAAM;AACvB,QAAIN,OAAO,GAAG,EAAd,EAAkBC,UAAU;AAC/B,GAFD;AAGH,CAlBD;;AAiCA,CAAC;AAAEH,EAAAA,UAAF;AAAcD,EAAAA,OAAd;AAAuBE,EAAAA,UAAvB;AAAmCJ,EAAAA,aAAnC;AAAkDY,EAAAA,OAAlD;AAA2DC,EAAAA,iBAA3D;AAA8ER,EAAAA;AAA9E,CAAD,KAA6F;AACzF,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,OAAO,EAAE,MAAM;AACXF,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;;AACA,UAAI,CAACA,OAAL,EAAc;AACdE,QAAAA,UAAU,CAACU,OAAX,GAAqB,IAArB;AACAd,QAAAA,aAAa;AACZ;AACJ,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKE,OAAO,GAAG,MAAH,GAAY,OATxB,CADJ,eAaI;AACI,IAAA,OAAO,EAAE,MAAM;AACf,YAAMa,IAAI,GAAG,EAAb;;AACI,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,OAApB,EAA6BW,CAAC,EAA9B,EAAkC;AAC9BD,QAAAA,IAAI,CAACE,IAAL,CAAUC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACb,OAAD,CAAhB,EAA2B,MAAOe,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,CAAtB,GAA0B,CAA5D,CAAV;AACH;;AACLT,MAAAA,OAAO,CAACG,IAAD,CAAP;AACH,KAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAyBI;AACI,IAAA,OAAO,EAAE,MAAM;AACXH,MAAAA,OAAO,CAACC,iBAAiB,EAAlB,CAAP;AACH,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBJ,CADJ;AAmCH,CApCD;;AAsCA,eAAef,YAAf","sourcesContent":["import React from 'react';\n\nconst GameControls = props => {\n    const {\n        runSimulation,\n        clearGrid,\n        running,\n        setRunning,\n        runningRef,\n        numRows,\n        setNumRows,\n        generation,\n        setGeneration,\n        speed,\n        setSpeed,\n    } = props;\n\n    const increaseSize = () => {\n        if (numRows < 40) setNumRows\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n({ setRunning, running, runningRef, runSimulation, setGrid, generateEmptyGrid, numRows }) => {\n    return (\n        <div className=\"game-controls\">\n            <button \n                onClick={() => { \n                    setRunning(!running);\n                    if (!running) {\n                    runningRef.current = true;\n                    runSimulation();\n                    }\n                }}\n            >\n                {running ? 'Stop' : 'Start' }\n            </button>\n\n            <button\n                onClick={() => {\n                const rows = [];\n                    for (let i = 0; i < numRows; i++) {\n                        rows.push(Array.from(Array(numRows), () => (Math.random() > 0.7 ? 1 : 0)));\n                    }\n                setGrid(rows);\n            }}\n            > \n                Randomize!\n            </button>\n\n            <button\n                onClick={() => {\n                    setGrid(generateEmptyGrid());\n                }}\n            > \n                Clear Grid\n            </button>\n        </div>\n    )\n}\n\nexport default GameControls;"]},"metadata":{},"sourceType":"module"}